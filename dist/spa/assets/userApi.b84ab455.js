import{a7 as b,aX as I}from"./index.bd6f5186.js";let d;const v=new Uint8Array(16);function x(){if(!d&&(d=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!d))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return d(v)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function D(t,r=0){return o[t[r+0]]+o[t[r+1]]+o[t[r+2]]+o[t[r+3]]+"-"+o[t[r+4]]+o[t[r+5]]+"-"+o[t[r+6]]+o[t[r+7]]+"-"+o[t[r+8]]+o[t[r+9]]+"-"+o[t[r+10]]+o[t[r+11]]+o[t[r+12]]+o[t[r+13]]+o[t[r+14]]+o[t[r+15]]}const R=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var l={randomUUID:R};function S(t,r,i){if(l.randomUUID&&!r&&!t)return l.randomUUID();t=t||{};const u=t.random||(t.rng||x)();if(u[6]=u[6]&15|64,u[8]=u[8]&63|128,r){i=i||0;for(let s=0;s<16;++s)r[i+s]=u[s];return r}return D(u)}function A(){const{user:t}=b(),r=S(),{supabase:i}=I(),u=async c=>{const{data:e,error:a}=await i.from(c).select();if(a)throw a;return e},s=async(c,e)=>{const{data:a,error:n}=await i.from(c).select().eq("id",e);if(n)throw n;return a[0]},m=async(c,e)=>{const{data:a,error:n}=await i.from(c).select().eq("num_bilhete",e);if(n)throw n;return a[0]},p=async(c,e)=>{const{data:a,error:n}=await i.from(c).insert({...e,user_id:t.value.id});if(n)throw n;return a},y=async(c,e)=>{const{data:a,error:n}=await i.from(c).update({...e}).match({id:e.id});if(n)throw n;return a},w=async(c,e)=>{const{data:a,error:n}=await i.from(c).delete().match({id:e});if(n)throw n;return a},g=async(c,e)=>{const{data:a,error:n}=await i.storage.from(e).upload(r,c,{cacheControl:3600,upsert:!1}),U=await h(r,e);if(n)throw n;return U},h=async(c,e)=>{const{data:a,error:n}=await i.storage.from(e).getPublicUrl(c);if(n)throw n;return console.log(a.publicUrl),a.publicUrl};return{list:u,getById:s,post:p,uploadImage:g,update:y,remove:w,fileName:r,validateBi:m}}export{A as u};
