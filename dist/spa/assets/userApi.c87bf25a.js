import{a3 as h,aU as I}from"./index.6cdbd242.js";let d;const b=new Uint8Array(16);function x(){if(!d&&(d=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!d))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return d(b)}const e=[];for(let t=0;t<256;++t)e.push((t+256).toString(16).slice(1));function v(t,r=0){return e[t[r+0]]+e[t[r+1]]+e[t[r+2]]+e[t[r+3]]+"-"+e[t[r+4]]+e[t[r+5]]+"-"+e[t[r+6]]+e[t[r+7]]+"-"+e[t[r+8]]+e[t[r+9]]+"-"+e[t[r+10]]+e[t[r+11]]+e[t[r+12]]+e[t[r+13]]+e[t[r+14]]+e[t[r+15]]}const D=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var l={randomUUID:D};function R(t,r,u){if(l.randomUUID&&!r&&!t)return l.randomUUID();t=t||{};const i=t.random||(t.rng||x)();if(i[6]=i[6]&15|64,i[8]=i[8]&63|128,r){u=u||0;for(let s=0;s<16;++s)r[u+s]=i[s];return r}return v(i)}function V(){const{user:t}=h(),r=R(),{supabase:u}=I(),i=async c=>{const{data:o,error:a}=await u.from(c).select();if(a)throw a;return o},s=async(c,o)=>{const{data:a,error:n}=await u.from(c).select().eq("id",o);if(n)throw n;return a[0]},p=async(c,o)=>{const{data:a,error:n}=await u.from(c).insert({...o,user_id:t.value.id});if(n)throw n;return a},m=async(c,o)=>{const{data:a,error:n}=await u.from(c).update({...o}).match({id:o.id});if(n)throw n;return a},y=async(c,o)=>{const{data:a,error:n}=await u.from(c).delete().match({id:o});if(n)throw n;return a},w=async(c,o)=>{const{data:a,error:n}=await u.storage.from(o).upload(r,c,{cacheControl:3600,upsert:!1}),g=await U(r,o);if(n)throw n;return g},U=async(c,o)=>{const{data:a,error:n}=await u.storage.from(o).getPublicUrl(c);if(n)throw n;return console.log(a.publicUrl),a.publicUrl};return{list:i,getById:s,post:p,uploadImage:w,update:m,remove:y,fileName:r}}export{V as u};
